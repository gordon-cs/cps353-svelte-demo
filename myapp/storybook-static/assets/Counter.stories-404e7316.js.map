{"version":3,"file":"Counter.stories-404e7316.js","sources":["../../node_modules/svelte/src/runtime/internal/environment.js","../../node_modules/svelte/src/runtime/internal/loop.js","../../node_modules/svelte/src/runtime/store/index.js","../../node_modules/svelte/src/runtime/motion/utils.js","../../node_modules/svelte/src/runtime/motion/spring.js","../../src/routes/Counter.svelte"],"sourcesContent":["import { noop } from './utils.js';\n\nexport const is_client = typeof window !== 'undefined';\n\n/** @type {() => number} */\nexport let now = is_client ? () => window.performance.now() : () => Date.now();\n\nexport let raf = is_client ? (cb) => requestAnimationFrame(cb) : noop;\n\n// used internally for testing\n/** @returns {void} */\nexport function set_now(fn) {\n\tnow = fn;\n}\n\n/** @returns {void} */\nexport function set_raf(fn) {\n\traf = fn;\n}\n","import { raf } from './environment.js';\n\nconst tasks = new Set();\n\n/**\n * @param {number} now\n * @returns {void}\n */\nfunction run_tasks(now) {\n\ttasks.forEach((task) => {\n\t\tif (!task.c(now)) {\n\t\t\ttasks.delete(task);\n\t\t\ttask.f();\n\t\t}\n\t});\n\tif (tasks.size !== 0) raf(run_tasks);\n}\n\n/**\n * For testing purposes only!\n * @returns {void}\n */\nexport function clear_loops() {\n\ttasks.clear();\n}\n\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n * @param {import('./private.js').TaskCallback} callback\n * @returns {import('./private.js').Task}\n */\nexport function loop(callback) {\n\t/** @type {import('./private.js').TaskEntry} */\n\tlet task;\n\tif (tasks.size === 0) raf(run_tasks);\n\treturn {\n\t\tpromise: new Promise((fulfill) => {\n\t\t\ttasks.add((task = { c: callback, f: fulfill }));\n\t\t}),\n\t\tabort() {\n\t\t\ttasks.delete(task);\n\t\t}\n\t};\n}\n","import {\n\trun_all,\n\tsubscribe,\n\tnoop,\n\tsafe_not_equal,\n\tis_function,\n\tget_store_value\n} from '../internal/index.js';\n\nconst subscriber_queue = [];\n\n/**\n * Creates a `Readable` store that allows reading by subscription.\n *\n * https://svelte.dev/docs/svelte-store#readable\n * @template T\n * @param {T} [value] initial value\n * @param {import('./public.js').StartStopNotifier<T>} [start]\n * @returns {import('./public.js').Readable<T>}\n */\nexport function readable(value, start) {\n\treturn {\n\t\tsubscribe: writable(value, start).subscribe\n\t};\n}\n\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n *\n * https://svelte.dev/docs/svelte-store#writable\n * @template T\n * @param {T} [value] initial value\n * @param {import('./public.js').StartStopNotifier<T>} [start]\n * @returns {import('./public.js').Writable<T>}\n */\nexport function writable(value, start = noop) {\n\t/** @type {import('./public.js').Unsubscriber} */\n\tlet stop;\n\t/** @type {Set<import('./private.js').SubscribeInvalidateTuple<T>>} */\n\tconst subscribers = new Set();\n\t/** @param {T} new_value\n\t * @returns {void}\n\t */\n\tfunction set(new_value) {\n\t\tif (safe_not_equal(value, new_value)) {\n\t\t\tvalue = new_value;\n\t\t\tif (stop) {\n\t\t\t\t// store is ready\n\t\t\t\tconst run_queue = !subscriber_queue.length;\n\t\t\t\tfor (const subscriber of subscribers) {\n\t\t\t\t\tsubscriber[1]();\n\t\t\t\t\tsubscriber_queue.push(subscriber, value);\n\t\t\t\t}\n\t\t\t\tif (run_queue) {\n\t\t\t\t\tfor (let i = 0; i < subscriber_queue.length; i += 2) {\n\t\t\t\t\t\tsubscriber_queue[i][0](subscriber_queue[i + 1]);\n\t\t\t\t\t}\n\t\t\t\t\tsubscriber_queue.length = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {import('./public.js').Updater<T>} fn\n\t * @returns {void}\n\t */\n\tfunction update(fn) {\n\t\tset(fn(value));\n\t}\n\n\t/**\n\t * @param {import('./public.js').Subscriber<T>} run\n\t * @param {import('./private.js').Invalidator<T>} [invalidate]\n\t * @returns {import('./public.js').Unsubscriber}\n\t */\n\tfunction subscribe(run, invalidate = noop) {\n\t\t/** @type {import('./private.js').SubscribeInvalidateTuple<T>} */\n\t\tconst subscriber = [run, invalidate];\n\t\tsubscribers.add(subscriber);\n\t\tif (subscribers.size === 1) {\n\t\t\tstop = start(set, update) || noop;\n\t\t}\n\t\trun(value);\n\t\treturn () => {\n\t\t\tsubscribers.delete(subscriber);\n\t\t\tif (subscribers.size === 0 && stop) {\n\t\t\t\tstop();\n\t\t\t\tstop = null;\n\t\t\t}\n\t\t};\n\t}\n\treturn { set, update, subscribe };\n}\n\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * https://svelte.dev/docs/svelte-store#derived\n * @template {import('./private.js').Stores} S\n * @template T\n * @overload\n * @param {S} stores - input stores\n * @param {(values: import('./private.js').StoresValues<S>, set: (value: T) => void, update: (fn: import('./public.js').Updater<T>) => void) => import('./public.js').Unsubscriber | void} fn - function callback that aggregates the values\n * @param {T} [initial_value] - initial value\n * @returns {import('./public.js').Readable<T>}\n */\n\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * https://svelte.dev/docs/svelte-store#derived\n * @template {import('./private.js').Stores} S\n * @template T\n * @overload\n * @param {S} stores - input stores\n * @param {(values: import('./private.js').StoresValues<S>) => T} fn - function callback that aggregates the values\n * @param {T} [initial_value] - initial value\n * @returns {import('./public.js').Readable<T>}\n */\n\n/**\n * @template {import('./private.js').Stores} S\n * @template T\n * @param {S} stores\n * @param {Function} fn\n * @param {T} [initial_value]\n * @returns {import('./public.js').Readable<T>}\n */\nexport function derived(stores, fn, initial_value) {\n\tconst single = !Array.isArray(stores);\n\t/** @type {Array<import('./public.js').Readable<any>>} */\n\tconst stores_array = single ? [stores] : stores;\n\tif (!stores_array.every(Boolean)) {\n\t\tthrow new Error('derived() expects stores as input, got a falsy value');\n\t}\n\tconst auto = fn.length < 2;\n\treturn readable(initial_value, (set, update) => {\n\t\tlet started = false;\n\t\tconst values = [];\n\t\tlet pending = 0;\n\t\tlet cleanup = noop;\n\t\tconst sync = () => {\n\t\t\tif (pending) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcleanup();\n\t\t\tconst result = fn(single ? values[0] : values, set, update);\n\t\t\tif (auto) {\n\t\t\t\tset(result);\n\t\t\t} else {\n\t\t\t\tcleanup = is_function(result) ? result : noop;\n\t\t\t}\n\t\t};\n\t\tconst unsubscribers = stores_array.map((store, i) =>\n\t\t\tsubscribe(\n\t\t\t\tstore,\n\t\t\t\t(value) => {\n\t\t\t\t\tvalues[i] = value;\n\t\t\t\t\tpending &= ~(1 << i);\n\t\t\t\t\tif (started) {\n\t\t\t\t\t\tsync();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\tpending |= 1 << i;\n\t\t\t\t}\n\t\t\t)\n\t\t);\n\t\tstarted = true;\n\t\tsync();\n\t\treturn function stop() {\n\t\t\trun_all(unsubscribers);\n\t\t\tcleanup();\n\t\t\t// We need to set this to false because callbacks can still happen despite having unsubscribed:\n\t\t\t// Callbacks might already be placed in the queue which doesn't know it should no longer\n\t\t\t// invoke this derived store.\n\t\t\tstarted = false;\n\t\t};\n\t});\n}\n\n/**\n * Takes a store and returns a new one derived from the old one that is readable.\n *\n * https://svelte.dev/docs/svelte-store#readonly\n * @template T\n * @param {import('./public.js').Readable<T>} store  - store to make readonly\n * @returns {import('./public.js').Readable<T>}\n */\nexport function readonly(store) {\n\treturn {\n\t\tsubscribe: store.subscribe.bind(store)\n\t};\n}\n\nexport { get_store_value as get };\n","/**\n * @param {any} obj\n * @returns {boolean}\n */\nexport function is_date(obj) {\n\treturn Object.prototype.toString.call(obj) === '[object Date]';\n}\n","import { writable } from '../store/index.js';\nimport { loop, now } from '../internal/index.js';\nimport { is_date } from './utils.js';\n\n/**\n * @template T\n * @param {import('./private.js').TickContext<T>} ctx\n * @param {T} last_value\n * @param {T} current_value\n * @param {T} target_value\n * @returns {T}\n */\nfunction tick_spring(ctx, last_value, current_value, target_value) {\n\tif (typeof current_value === 'number' || is_date(current_value)) {\n\t\t// @ts-ignore\n\t\tconst delta = target_value - current_value;\n\t\t// @ts-ignore\n\t\tconst velocity = (current_value - last_value) / (ctx.dt || 1 / 60); // guard div by 0\n\t\tconst spring = ctx.opts.stiffness * delta;\n\t\tconst damper = ctx.opts.damping * velocity;\n\t\tconst acceleration = (spring - damper) * ctx.inv_mass;\n\t\tconst d = (velocity + acceleration) * ctx.dt;\n\t\tif (Math.abs(d) < ctx.opts.precision && Math.abs(delta) < ctx.opts.precision) {\n\t\t\treturn target_value; // settled\n\t\t} else {\n\t\t\tctx.settled = false; // signal loop to keep ticking\n\t\t\t// @ts-ignore\n\t\t\treturn is_date(current_value) ? new Date(current_value.getTime() + d) : current_value + d;\n\t\t}\n\t} else if (Array.isArray(current_value)) {\n\t\t// @ts-ignore\n\t\treturn current_value.map((_, i) =>\n\t\t\ttick_spring(ctx, last_value[i], current_value[i], target_value[i])\n\t\t);\n\t} else if (typeof current_value === 'object') {\n\t\tconst next_value = {};\n\t\tfor (const k in current_value) {\n\t\t\t// @ts-ignore\n\t\t\tnext_value[k] = tick_spring(ctx, last_value[k], current_value[k], target_value[k]);\n\t\t}\n\t\t// @ts-ignore\n\t\treturn next_value;\n\t} else {\n\t\tthrow new Error(`Cannot spring ${typeof current_value} values`);\n\t}\n}\n\n/**\n * The spring function in Svelte creates a store whose value is animated, with a motion that simulates the behavior of a spring. This means when the value changes, instead of transitioning at a steady rate, it \"bounces\" like a spring would, depending on the physics parameters provided. This adds a level of realism to the transitions and can enhance the user experience.\n *\n * https://svelte.dev/docs/svelte-motion#spring\n * @template [T=any]\n * @param {T} [value]\n * @param {import('./private.js').SpringOpts} [opts]\n * @returns {import('./public.js').Spring<T>}\n */\nexport function spring(value, opts = {}) {\n\tconst store = writable(value);\n\tconst { stiffness = 0.15, damping = 0.8, precision = 0.01 } = opts;\n\t/** @type {number} */\n\tlet last_time;\n\t/** @type {import('../internal/private.js').Task} */\n\tlet task;\n\t/** @type {object} */\n\tlet current_token;\n\t/** @type {T} */\n\tlet last_value = value;\n\t/** @type {T} */\n\tlet target_value = value;\n\tlet inv_mass = 1;\n\tlet inv_mass_recovery_rate = 0;\n\tlet cancel_task = false;\n\t/**\n\t * @param {T} new_value\n\t * @param {import('./private.js').SpringUpdateOpts} opts\n\t * @returns {Promise<void>}\n\t */\n\tfunction set(new_value, opts = {}) {\n\t\ttarget_value = new_value;\n\t\tconst token = (current_token = {});\n\t\tif (value == null || opts.hard || (spring.stiffness >= 1 && spring.damping >= 1)) {\n\t\t\tcancel_task = true; // cancel any running animation\n\t\t\tlast_time = now();\n\t\t\tlast_value = new_value;\n\t\t\tstore.set((value = target_value));\n\t\t\treturn Promise.resolve();\n\t\t} else if (opts.soft) {\n\t\t\tconst rate = opts.soft === true ? 0.5 : +opts.soft;\n\t\t\tinv_mass_recovery_rate = 1 / (rate * 60);\n\t\t\tinv_mass = 0; // infinite mass, unaffected by spring forces\n\t\t}\n\t\tif (!task) {\n\t\t\tlast_time = now();\n\t\t\tcancel_task = false;\n\t\t\ttask = loop((now) => {\n\t\t\t\tif (cancel_task) {\n\t\t\t\t\tcancel_task = false;\n\t\t\t\t\ttask = null;\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tinv_mass = Math.min(inv_mass + inv_mass_recovery_rate, 1);\n\t\t\t\tconst ctx = {\n\t\t\t\t\tinv_mass,\n\t\t\t\t\topts: spring,\n\t\t\t\t\tsettled: true,\n\t\t\t\t\tdt: ((now - last_time) * 60) / 1000\n\t\t\t\t};\n\t\t\t\tconst next_value = tick_spring(ctx, last_value, value, target_value);\n\t\t\t\tlast_time = now;\n\t\t\t\tlast_value = value;\n\t\t\t\tstore.set((value = next_value));\n\t\t\t\tif (ctx.settled) {\n\t\t\t\t\ttask = null;\n\t\t\t\t}\n\t\t\t\treturn !ctx.settled;\n\t\t\t});\n\t\t}\n\t\treturn new Promise((fulfil) => {\n\t\t\ttask.promise.then(() => {\n\t\t\t\tif (token === current_token) fulfil();\n\t\t\t});\n\t\t});\n\t}\n\t/** @type {import('./public.js').Spring<T>} */\n\tconst spring = {\n\t\tset,\n\t\tupdate: (fn, opts) => set(fn(target_value, value), opts),\n\t\tsubscribe: store.subscribe,\n\t\tstiffness,\n\t\tdamping,\n\t\tprecision\n\t};\n\treturn spring;\n}\n","<script>\n\timport { spring } from 'svelte/motion';\n\n\tlet count = 0;\n\n\tconst displayed_count = spring();\n\t$: displayed_count.set(count);\n\t$: offset = modulo($displayed_count, 1);\n\n\t/**\n\t * @param {number} n\n\t * @param {number} m\n\t */\n\tfunction modulo(n, m) {\n\t\t// handle negative numbers\n\t\treturn ((n % m) + m) % m;\n\t}\n</script>\n\n<div class=\"counter\">\n\t<button on:click={() => (count -= 1)} aria-label=\"Decrease the counter by one\">\n\t\t<svg aria-hidden=\"true\" viewBox=\"0 0 1 1\">\n\t\t\t<path d=\"M0,0.5 L1,0.5\" />\n\t\t</svg>\n\t</button>\n\n\t<div class=\"counter-viewport\">\n\t\t<div class=\"counter-digits\" style=\"transform: translate(0, {100 * offset}%)\">\n\t\t\t<strong class=\"hidden\" aria-hidden=\"true\">{Math.floor($displayed_count + 1)}</strong>\n\t\t\t<strong>{Math.floor($displayed_count)}</strong>\n\t\t</div>\n\t</div>\n\n\t<button on:click={() => (count += 1)} aria-label=\"Increase the counter by one\">\n\t\t<svg aria-hidden=\"true\" viewBox=\"0 0 1 1\">\n\t\t\t<path d=\"M0,0.5 L1,0.5 M0.5,0 L0.5,1\" />\n\t\t</svg>\n\t</button>\n</div>\n\n<style>\n\t.counter {\n\t\tdisplay: flex;\n\t\tborder-top: 1px solid rgba(0, 0, 0, 0.1);\n\t\tborder-bottom: 1px solid rgba(0, 0, 0, 0.1);\n\t\tmargin: 1rem 0;\n\t}\n\n\t.counter button {\n\t\twidth: 2em;\n\t\tpadding: 0;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\tborder: 0;\n\t\tbackground-color: transparent;\n\t\ttouch-action: manipulation;\n\t\tfont-size: 2rem;\n\t}\n\n\t.counter button:hover {\n\t\tbackground-color: var(--color-bg-1);\n\t}\n\n\tsvg {\n\t\twidth: 25%;\n\t\theight: 25%;\n\t}\n\n\tpath {\n\t\tvector-effect: non-scaling-stroke;\n\t\tstroke-width: 2px;\n\t\tstroke: #444;\n\t}\n\n\t.counter-viewport {\n\t\twidth: 8em;\n\t\theight: 4em;\n\t\toverflow: hidden;\n\t\ttext-align: center;\n\t\tposition: relative;\n\t}\n\n\t.counter-viewport strong {\n\t\tposition: absolute;\n\t\tdisplay: flex;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tfont-weight: 400;\n\t\tcolor: var(--color-theme-1);\n\t\tfont-size: 4rem;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t}\n\n\t.counter-digits {\n\t\tposition: absolute;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t}\n\n\t.hidden {\n\t\ttop: -100%;\n\t\tuser-select: none;\n\t}\n</style>\n"],"names":["is_client","now","raf","cb","noop","tasks","run_tasks","task","loop","callback","fulfill","subscriber_queue","writable","value","start","stop","subscribers","set","new_value","safe_not_equal","run_queue","subscriber","i","update","fn","subscribe","run","invalidate","is_date","obj","tick_spring","ctx","last_value","current_value","target_value","delta","velocity","spring","damper","acceleration","d","_","next_value","k","opts","store","stiffness","damping","precision","last_time","current_token","inv_mass","inv_mass_recovery_rate","cancel_task","token","fulfil","t1_value","set_style","div0","insert_hydration","target","div2","anchor","append_hydration","button0","div1","strong0","strong1","button1","dirty","set_data","t1","t3","t3_value","modulo","n","m","count","displayed_count","click_handler","$$invalidate","click_handler_1","offset","$displayed_count"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4]}